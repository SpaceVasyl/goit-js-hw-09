{"mappings":"AAAA,MAAMA,EAAaC,SAASC,cAAc,SACpCC,EAAgBF,SAASC,cAAc,UACvCE,EAAM,GACZJ,EAAWK,iBAAiB,SAC5B,SAAkBC,GAChBF,EAAIE,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,K,IAExCN,EAAcE,iBAAiB,SAE/B,SAAqBC,GACnBA,EAAMI,iBACN,MAAMC,OAAEA,EAAMC,MAAEA,EAAKC,KAAEA,GAAST,GAIlC,SAAuBU,EAAUF,GAC/B,MAAMG,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACtCC,YAAW,KACPN,EACFI,EAAQ,6CAERC,EAAO,yCAAyC,GAE7ChB,EAAIQ,MAAM,G,CAZfU,CAAclB,EAAIO,OAAQP,EAAIQ,M","sources":["src/js/03-promises.js"],"sourcesContent":["const delayInput = document.querySelector('.form');\nconst promiseButton = document.querySelector('button');\nconst obj = {};\ndelayInput.addEventListener(\"input\", inputObj);\nfunction inputObj(event) {\n  obj[event.target.name] = event.target.value;\n};\npromiseButton.addEventListener(\"click\", formHandler);\n\nfunction formHandler(event) {\n  event.preventDefault();\n  const { amount, delay, step } = obj;\n  createPromise(obj.amount, obj.delay)\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n  if (shouldResolve) {\n    resolve(\"Success! Value passed to resolve function\");\n  } else {\n    reject(\"Error! Error passed to reject function\");\n  }\n    }, obj.delay);\n});\n}\n"],"names":["$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$promiseButton","$47d4ff9957288465$var$obj","addEventListener","event","target","name","value","preventDefault","amount","delay","step","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise"],"version":3,"file":"03-promises.e623b38b.js.map"}