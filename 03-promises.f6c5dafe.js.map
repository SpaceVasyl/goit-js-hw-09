{"mappings":"YAAA,IAAMA,EAAaC,SAASC,cAAc,SACpCC,EAAgBF,SAASC,cAAc,UACvCE,EAAM,GAuBZ,SAASC,EAAcC,EAAUC,EAAOC,GACpC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAACJ,WAAUC,QAAOC,SAE1BG,EAAO,CAACL,WAAUC,QAAOC,Q,GACxBD,GAASD,EAAW,GAAKE,E,IA7BlCR,EAAWgB,iBAAiB,SAC5B,SAAkBC,GAChBb,EAAIa,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,K,IAExCjB,EAAca,iBAAiB,SAE/B,SAAqBC,GACnBA,EAAMI,iBAC0BjB,EAAxBkB,OAAwBlB,EAAhBG,MAChB,IADA,IAAuBgB,EAASnB,EAATI,KACdgB,EAAI,EAAGA,GAAKpB,EAAIkB,OAAQE,IAC3BA,GAAKpB,EAAIkB,QACTjB,EAAcmB,EAAGC,OAAOrB,EAAIG,OAAQkB,OAAOrB,EAAII,OAAOkB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAAOC,EAAImB,EAAJnB,KAC7EoB,QAAQC,IAAI,uBAAwCC,OAAfxB,EAAS,QAAoCwB,OAA9BvB,GAASD,EAAW,GAAKE,EAAK,M,IAGnFuB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,QAAQC,IAAI,sBAAqCC,OAAfxB,EAAS,QAAoCwB,OAA9BvB,GAASD,EAAW,GAAKiB,EAAK,M","sources":["src/js/03-promises.js"],"sourcesContent":["const delayInput = document.querySelector('.form');\nconst promiseButton = document.querySelector('button');\nconst obj = {};\n\ndelayInput.addEventListener(\"input\", inputObj);\nfunction inputObj(event) {\n  obj[event.target.name] = event.target.value;\n};\npromiseButton.addEventListener(\"click\", formHandler);\n\nfunction formHandler(event) {\n  event.preventDefault();\n  const { amount, delay, step } = obj;\n  for (let i = 1; i <= obj.amount; i++) {\n    if (i <= obj.amount) {\n        createPromise(i, Number(obj.delay), Number(obj.step)).then(({ position, delay, step }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay + (position - 1) * step}ms`);\n          // console.log(Number(delay) + (Number(position) - 1) * Number(step));\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay + (position - 1) * step}ms`);\n        });\n    }\n  }\n}\nfunction createPromise(position, delay, step) {\n    return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay, step});\n      }\n        reject({position, delay, step});\n      }, delay + (position - 1) * step);\n  })\n}\n\n\n\n  \n  \n"],"names":["$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$promiseButton","$ce04d3a99e08e73b$var$obj","$ce04d3a99e08e73b$var$createPromise","position","delay","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","target","name","value","preventDefault","amount","step1","i","Number","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.f6c5dafe.js.map"}